---
import RichTextRenderer from "storyblok-rich-text-astro-renderer/RichTextRenderer.astro"
import type { RichTextType } from "storyblok-rich-text-astro-renderer"
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro"

import { storyblokEditable, renderRichText } from '@storyblok/astro'
import BannerBlob from '../components/BannerBlob.jsx'

export interface Props {
  blok: {
    title: RichTextType,
    image: {
      filename: string,
      alt: string,
    },
  };
}
const { blok } = Astro.props
---

<div class="relative" {...storyblokEditable(blok)}>
  <div class="absolute top-0 z-10 right-0 bottom-0 left-0 backdrop-blur-xl" />
  <div class="container relative z-10 mx-auto my-24 px-12 md:px-0 md:flex gap-10 items-center text-center md:text-left">
    <div class="relative basis-2/3 max-w-[500px] mx-auto mb-20">
      <img
        class="rounded-full aspect-square object-cover"
        src={blok.image.filename}
        alt={blok.image.alt}
        class="w-full h-48 xl:h-72 object-cover"
      />
      <div class="flex w-16 h-16 md:w-24 md:h-24 items-center justify-center absolute mt-[-100px] ml-10">
        <span class="absolute bg-white w-[300%] h-full z-10 rounded-full -rotate-45 origin-[66%_160%]" />
        <div class="relative z-10 animate-wave text-5xl md:text-7xl w-12 h-12 md:w-20 md:h-20 origin-bottom-right">ðŸ‘‹</div>
      </div>
    </div>
    <!-- <div set:html={renderedTitle}></div> -->
    <RichTextRenderer
      content={blok.title}
      schema={{
        nodes: {
          heading: ({ attrs: { level } }) => ({
            props: {
              variant: `h${level}`,
              class:`text-${level === 1 ? '4xl mb-3 leading-relaxed' : 'xl'}`
            },
          }),
          paragraph: () => ({
            props: {
              class: "text-lg",
            },
          }),
        },
        marks: {
          highlight: ({ attrs }) => ({
            props: {
              style: `background-color: ${attrs.color}`,
              class: "px-5 py-1 rounded-full whitespace-nowrap",
            }
          }),
          link: ({ attrs }) => {
            const { custom, ...restAttrs } = attrs;

            return {
              props: {
                class: "underline text-brick",
                ...restAttrs
              },
            };
          },
        }
      }}
      resolver={(blok) => {
        return {
          component: StoryblokComponent,
          props: { blok },
        };
      }}
      {...storyblokEditable(blok)}
    />
  </div>
  <div class="absolute z-0 top-[5%] bottom-[8%] left-[5%] right-[10%]">
    <BannerBlob color="light-brick" client:load />
    <BannerBlob color="light-amber" client:load />
  </div>
</div>